<meta name="viewport"
      content="width=device-width, initial-scale=1.0, user-scalable=no">
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript" src="js/interface.js"></script>
<script type="text/javascript" src="js/jquery.form.js"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=true"></script>
<script type="text/javascript">

    // GLOBALS
    var map;
    var placess;
    var distanceMatrix;
    var placeInfo;
    var userInfo;
    var travelTime;
    var myLatLng;
    var mouseX;
    var mouseY;
    var myMarker;
    var liveMarkers = new Array;
    var myActivePlaceMarker;
    var handleSearchResults_complete = false; // these are used to track the status of the api callback handlers
    var handleDetailResult_complete = false; // these are used to track the status of the api callback handlers
    var handleDistancMatrixResult_complete = false; // these are used to track the status of the api callback handlers
    var targetText = ''; // for evaluating challenge
    function initialize()
    {
        myLatLng = new google.maps.LatLng(45.513, -122.62);
        var myMapOptions =
        {
            zoom: 17,
            center: myLatLng,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
//               disableDefaultUI: true,
//               disableDoubleClickZoom: true
        };
        map = new google.maps.Map(document.getElementById('map_canvas'), myMapOptions);
        google.maps.event.addDomListener(map, 'dragend', searchMap);
        google.maps.event.addDomListener(map, 'resize', searchMap);
        google.maps.event.addDomListener(map, 'zoom_changed', searchMap);

        placess = new google.maps.places.PlacesService(map);
        distanceMatrix = new google.maps.DistanceMatrixService();

        var myMarkerInfo =
        {
            icon: 'http://lango.dev/lango/images/fw.jpg'
        }
        myMarker = addMarker(myLatLng, myMarkerInfo);
        google.maps.event.addDomListener(myMarker, 'click', showUserInfo);
    }

    function searchMap(){
        var liveMarker;
        while(liveMarker=liveMarkers.pop())
        {
            liveMarker.setMap(null);
        }

        var placeTypeChecked = $('input:checkbox[name=placeTypes]:checked');
        if(placeTypeChecked.length>0)
        {
            var placeTypes = new Array;
            for(var i=0; i<placeTypeChecked.length; i++)
            {
                placeTypes[i] = placeTypeChecked[i].value;
            }
            thing=map;
            var myPlaceSearchOptions =
            {
                location: map.getCenter(),
                bounds: map.getBounds(),
                types: placeTypes
            }
            /*
             var myPlaceSearchOptions =
             {
             location: myLatLng,
             radius: 500,
             types: placeTypes
             }
             */
            placess.search(myPlaceSearchOptions, handleSearchResults);
        }
    }
    function handleSearchResults(results, status)
    {
        if (status == google.maps.places.PlacesServiceStatus.OK)
        {
            for (var i = 0; i < results.length; i++)
            {
                var place = results[i];
                addPlaceMarker(place);
            }
        }
        handleSearchResults_complete = true;
    }

    function addMarker(location, markerInfo)
    {
        var myIcon;
        if(markerInfo && markerInfo.icon)
        {
            myIcon = markerInfo.icon;
        }
        else
        {
            myIcon = null;
        }
        var myMarkerOptions = {
            map: map,
            position: location,
            icon: myIcon
        };
        var marker = new google.maps.Marker(myMarkerOptions);
        return marker;
    }

    function addPlaceMarker(place)
    {
        var marker = addMarker(place.geometry.location);
        marker.set('placeReference', place.reference);
        liveMarkers.push(marker);
        google.maps.event.addDomListener(marker, 'click', showPlaceInfo);
//            google.maps.event.addDomListener(marker, 'mouseout', hidePlaceInfo);
        return marker;
    }

    function handleDetailResult(result, status)
    {
        if (status == google.maps.places.PlacesServiceStatus.OK)
        {
            placeInfo =
            {
                food: 0,
                drink: 0,
                entertainment: 0,
                cost: 0,
                types: result.types,
                name: result.name,
                rating: result.rating,
                id: result.id
            }


            for(var i=0; i<placeInfo.types.length; i++)
            {
                var type = placeInfo.types[i];
                switch(type)
                {
                    // move these magic numbers
                    case 'bar':
                        placeInfo.food += 8;
                        placeInfo.drink += 10;
                        placeInfo.cost += 5;
                        break;
                    case 'cafe':
                        placeInfo.food += 5;
//                        placeInfo.caffeine += 5;
                        placeInfo.cost += 3;
                        break;
                }
            }
            $("#place_info_handle").html(placeInfo.name);
            $("#place_info_id").html(placeInfo.id);
            $("#place_info_name").html(placeInfo.name);
            $("#place_info_rating").html(placeInfo.rating);
            $("#place_info_food").html(placeInfo.food);
            $("#place_info_drink").html(placeInfo.drink);
            $("#place_info_entertainment").html(placeInfo.entertainment);
            $("#place_info_cost").html(placeInfo.cost);
        }
        handleDetailResult_complete = true;
    }

    function handleDistanceMatrixResult(result, status)
    {
        if (status == google.maps.DistanceMatrixStatus.OK)
        {
            travelTime = result.rows[0].elements[0].duration;
            $("#place_info_travelTimeWalk").html(travelTime.text);
        }
        handleDistancMatrixResult_complete = true;
    }

    function showPlaceInfo()
    {
        $("#place_info").css('left', mouseX);
        $("#place_info").css('top', mouseY);

        myActivePlaceMarker = this; // do we need this global?
        var placeDetailsRequest =
        {
            reference: myActivePlaceMarker.placeReference
        }
        placess.getDetails(placeDetailsRequest, handleDetailResult);

        var distanceMatrixRequest =
        {
            origins: [myLatLng],
            destinations: [this.position],
            travelMode:google.maps.TravelMode.WALKING
        }
        distanceMatrix.getDistanceMatrix(distanceMatrixRequest, handleDistanceMatrixResult);

        $("#place_info").show(); // this actually gets shown before it gets populated due to the asynchronous nature of the handlers
    }

    function hidePlaceInfo()
    {
        $("#place_info").hide();
    }

    function evaluateChallenge(input)
    {
        if(input.value.toLowerCase() == targetText.toLowerCase())
        {
            alert("yeah!");
        }
        else
        {
            alert("nope");
        }
    }


    google.maps.event.addDomListener(window, 'load', initialize);
    // NOW FOR JQUERY STUFF
    $(document).ready(function(){
        $('#search_bar').click()
        $().mousemove(function(e){
            mouseX = e.pageX;
            mouseY = e.pageY;
        });
        //jQuery events go here
        $('#user_info').Draggable(
                {
                    zIndex:    20,
                    ghosting:false,
                    opacity: 0.7,
                    handle:    '#user_info_handle'
                }
        );
        $("#user_info").hide();

        $('#user_info_close').click(function()
        {
            $("#user_info").hide();
        });
        $('#user_info_handle').click(function()
        {
            $("#user_info").hide();
        });

        $('#place_info').Draggable(
                {
                    zIndex:    20,
                    ghosting:false,
                    opacity: 0.7,
                    handle:    '#place_info_handle'
                }
        );
        $("#place_info_go_walk").click(doAction);
        $("#place_info_go_taxi").click(doAction);
        $("#place_info").hide();

        $('#place_info_close').click(function()
        {
            $("#place_info").hide();
        });
        $('#place_info_handle').click(function()
        {
            $("#place_info").hide();
        });

        $('#speech').Draggable(
                {
                    zIndex:    20,
                    ghosting:false,
                    opacity: 0.7,
                    handle:    '#speech_handle'
                }
        );
        $("#speech").hide();

        $('#speech_close').click(function()
        {
            $("#speech").hide();
        });
        $('#speech_handle').click(function()
        {
            $("#speech").hide();
        });

        $('#speech-input-field').change(function()
        {
            evaluateChallenge(this);
        });

        <?
                $i=0;
        while($i<count($myBoard->place_types))
        {
            $type = $myBoard->place_types[$i++];
            ?>
            $('#a_search_<?=$type?>').click(function()
            {
                $('#search_<?=$type?>').click();
            });
            $('#search_<?=$type?>').click(function()
            {
                searchMap();
//               $("#user_info").hide();
            });
        <?
        }
        ?>
    });


    function showUserInfo(e)
    {
        $("#user_info").css('left', mouseX);
        $("#user_info").css('top', mouseY);
        jQuery.post( 'handler.php', { userInfo: userInfo }, ajaxUserHandler );
        $("#user_info").show();
    }
    function ajaxUserHandler(data)
    {
        userInfo = jQuery.parseJSON(data);
        var date = new Date(userInfo.time*1000);
        var hours = date.getHours();
        var minutes = date.getMinutes();
        $("#user_info_time").html(hours + ':' + minutes);
        $("#user_info_money").html(userInfo.money);
        $("#user_info_health").html(userInfo.health);
        $("#user_info_energy").html(userInfo.energy);
        $("#user_info_food").html(userInfo.food);
        $("#user_info_drink").html(userInfo.drink);
        $("#user_info_bio").html(userInfo.bio);
        $("#user_info_happiness").html(userInfo.happiness);
    }

    // this is the one that does it
    function doAction(e)
    {
        if(e.target.id == 'place_info_go_walk')
        {
            // if
            // go to the place
            myMarker.setPosition(myActivePlaceMarker.position);
            userInfo.time = parseInt(userInfo.time) + parseInt(travelTime.value);
            userInfo.money = parseInt(userInfo.money) - parseInt(placeInfo.cost);
            userInfo.food = parseInt(userInfo.food) + parseInt(placeInfo.food);
            userInfo.drink = parseInt(userInfo.drink) + parseInt(placeInfo.drink);
            userInfo.happiness = parseInt(userInfo.happiness) + parseInt(placeInfo.entertainment);
            $("#user_info_time").html(userInfo.time);
            $("#user_info_money").html(userInfo.money);


            $("#place_info").hide();
        }
        if(e.target.id == 'place_info_go_taxi')
        {
            $("#place_info").hide();
            targetText = "Driver please take me to " + placeInfo.name;
            var challengeText = "Say the following:\n\"" + targetText + "\"";
            $("#challenge").html(challengeText);
            $("#speech").show();
            // var placeInfo = getPlaceInfo(myActivePlaceMarker.position);
            thinger = placeInfo;
        }
    }

</script>
<style type="text/css">
    body
    {
        font-family:Verdana, Arial, Helvetica, sans-serif;
        font-size:11px
    }
    #user_info, #place_info, #speech
    {
        position: absolute;
        left:200px;
        top:100px;
        width:500px;
        background-color:#f0f5FF;
        border: 1px solid #000;
        z-index: 50;
    }
    #user_info_handle, #place_info_handle, #speech_handle
    {
        background-color:#5588bb;
        padding:2px;
        text-align:center;
        font-weight:bold;
        color: #FFFFFF;
        vertical-align:middle;
    }
    #user_info_content, #place_info_content, #speech_content
    {
        padding:5px;
    }
    #user_info_close, #place_info_close, #speech_close
    {
        float:right;
        text-decoration:none;
        color:#FFFFFF;
    }
    h1, h2
    {
        font-size:20px;
    }
</style>
</head>
<body>

<h1>Welcome to Traveler</h1>
<p>Find me in app/views/home/index.html.erb</p>

<p>
  It is now <%= Time.now %>
</p>
<p>
  You are at  <%= Time.now %>
</p>

<h2>Go Somewhere</h2>
<ul>
  <li>915 SE 35th ave</li>
  <li>Basement Pub</li>
  <li>Paradox Cafe</li>
  <li></li>
</ul>

<h2>Do Something</h2>
<ul>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
</ul>

<h2></h2>
</body>
</html>
